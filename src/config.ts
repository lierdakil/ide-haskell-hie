const tooltipActions = [
  { value: '', description: 'Nothing' },
  { value: 'type', description: 'Type' },
  { value: 'info', description: 'Info' },
  { value: 'infoType', description: 'Info, fallback to Type' },
  { value: 'typeInfo', description: 'Type, fallback to Info' },
  { value: 'typeAndInfo', description: 'Type and Info' },
]

export const config = {
  hiePath: {
    type: 'string',
    default: 'hie',
    description: 'Path to haskell-ide-engine executable',
    order: 0,
  },
  debug: {
    type: 'boolean',
    default: false,
    order: 999,
  },
  onMouseHoverShow: {
    type: 'string',
    description: 'Contents of tooltip on mouse hover',
    default: 'typeAndInfo',
    enum: tooltipActions,
    order: 30,
  },
  onSelectionShow: {
    type: 'string',
    description: 'Contents of tooltip on selection',
    default: '',
    enum: tooltipActions,
    order: 30,
  },
  highlightTooltips: {
    type: 'boolean',
    default: true,
    description: 'Show highlighting for type/info tooltips',
    order: 40,
  },
  suppressRedundantTypeInTypeAndInfoTooltips: {
    type: 'boolean',
    default: true,
    description: `In tooltips with type AND info, suppress type if \
it's the same as info`,
    order: 41,
  },
  highlightMessages: {
    type: 'boolean',
    default: true,
    description: 'Show highlighting for output panel messages',
    order: 40,
  },
  ghcModMessages: {
    type: 'string',
    description:
      'How to show warnings/errors reported by ghc-mod (requires restart)',
    default: 'console',
    enum: [
      { value: 'console', description: 'Developer Console' },
      { value: 'upi', description: 'Output Panel' },
      { value: 'popup', description: 'Error/Warning Popups' },
    ],
    order: 42,
  },
}

// generated by typed-config.js
declare module 'atom' {
  interface ConfigValues {
    'ide-haskell-hie.hiePath': string
    'ide-haskell-hie.debug': boolean
    'ide-haskell-hie.onMouseHoverShow':
      | ''
      | 'type'
      | 'info'
      | 'infoType'
      | 'typeInfo'
      | 'typeAndInfo'
    'ide-haskell-hie.onSelectionShow':
      | ''
      | 'type'
      | 'info'
      | 'infoType'
      | 'typeInfo'
      | 'typeAndInfo'
    'ide-haskell-hie.highlightTooltips': boolean
    'ide-haskell-hie.suppressRedundantTypeInTypeAndInfoTooltips': boolean
    'ide-haskell-hie.highlightMessages': boolean
    'ide-haskell-hie.ghcModMessages': 'console' | 'upi' | 'popup'
    'ide-haskell-hie': {
      hiePath: string
      debug: boolean
      onMouseHoverShow:
        | ''
        | 'type'
        | 'info'
        | 'infoType'
        | 'typeInfo'
        | 'typeAndInfo'
      onSelectionShow:
        | ''
        | 'type'
        | 'info'
        | 'infoType'
        | 'typeInfo'
        | 'typeAndInfo'
      highlightTooltips: boolean
      suppressRedundantTypeInTypeAndInfoTooltips: boolean
      highlightMessages: boolean
      ghcModMessages: 'console' | 'upi' | 'popup'
    }
  }
}
